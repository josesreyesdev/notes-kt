ENCAPSULAMIENTO => Es organizar o incluir todas las funciones relacionadas de forma lógica.
SUBPROCESO => Realizar tareas en segundo plano. Con varios subprocesos podemos ejecutar multiples
              secuencias de código a la vez.
MULTIPROCESO => Es el uso de varios subprocesos.

JERARQUIA DE CLASES => Disposición en la que las clases se organizan en una jerarquía de elementos
                       superiores y secundarios (por lo general, los diagramas de jerarquía se dibujan
                       con los elementos superiores arriba de los secundarios).
ELEMENTO SECUNDARIO O SUBCLASE => Cualquier clase que esté debajo de otra clase en la jerarquía.
CLASE SUPERIOR, SUPERCLASE O CLASE BASE => Cualquier clase con una o más clases secundarias.
CLASE RAÍZ O NIVEL SUPERIOR => Clase en la parte superior (o raíz) de la jerarquía de la clase.
HERENCIA => Se da cuando una clase secundaria incluye (o hereda) todas las propiedades y los métodos
            de su clase superior (esto le permite compartir y reutilizar código, lo que facilita la
            comprensión y el mantenimiento de los programas).

CLASE ABSTRACTA: Es una clase de la que no se puede crear una instancia porque no se implementó por completo.

CONSTRUCTOR: Se le llama constructor cuando creas una instancia de objeto desde una clase.

EXTRA: Es un dato al que se le asigna un nombre que se puede recuperar mas adelante como un num o una string en un intent

CONTEXT: Referencia al estado actual de la app, un activity o un fragmento. Contiene info sobre la activity, el fragment
         o la app. Por lo genenral se usa para obtener acceso a los recursos, las bases de datos y otros servicios del sistema.

BUNDLE: Es una coleccion de pares clave-valor en las que las claves siempre son strings, podemos colocar valores
        simples como Int y Boolean

FRAGMENT: Es una parte reutilizada de la UI.

SAFE ARGS: Complemento de Gradle que ayuda a la seguridad de tipo cuando pasemos datos entre fragmentos.

LIVEDATA: Es una clase de retencion de datos observable que tiene en cuenta el ciclo de vida.
          Tambien es un wrapper que se puede usar con cualquier tipo de datos.
          El liveData solo actualiza observadores activos, como, STARTED o RESUMED del fragment o activity.

--------------------------------------------REGISTROS DE DEPURACION------------------------------------------------
=> Hay varias funciones para registros de resultados con los siguientes formatos:
Log.v(), Log.d(), Log.i(), Log.w(), Log.e()

Cada funcion de registro toma dos parametros que son:
1) Una string que identifica el origen del mensaje de registro (como el nombre de la clase)
   private cons val TAG = "MainActivity" // Se declara al inicio de la clase a depurar
2) Mensaje de registro real

NIVELES DE REGISTRO
ERROR   => Indican error grave o motivo por el que fallo la app.
WARN    => Son menos graves que un error, pero aun asi informan que deberian corregirse.
INFO    => Proporcionan informacion util, como una operacion que se completa con exito.
DEBUG   => Contienen informacion que puede resultar util para investigar un problema. No están presentes en
           compilaciones de lanzamiento como una que publicarias en la Google Play Store.
VERBOSE => Es el nivel de registro menos especifico. Lo que se considera un registro de depuracion , en
           comparacion con uno detallado, es un poco subjetivo. Estos registros tampoco se incluyen en las
           compilaciones de lanzamiento.

EXAMPLES
fun logging() {
    Log.e(TAG, "ERROR: a serious error like an app crash")
    Log.w(TAG, "WARN: warns about the potential for serious errors")
    Log.i(TAG, "INFO: reporting technical information, such as an operation succeeding")
    Log.d(TAG, "DEBUG: reporting technical information useful for debugging")
    Log.v(TAG, "VERBOSE: more verbose than DEBUG logs")
}

-------------------------------------------- TIPOS DE INTENT ------------------------------------------------
OTROS TIPOS DE INTENTS => https://developer.android.com/guide/components/intents-common
    * ACTION_VIEW => Abre una URI en el navegador web
    * CATEGORY_APP_MAPS => Inicia la app de mapas
    * CATEGORY_APP_GALLERY => Inicia la app de fotos(galeria)
    * ACTION_SET_ALARM => Inicia la app de alarma
    * ACTION_DIAL => Inicia una llamada teléfonica




/** Books */
1) Robert Fishier --- El caballero de la armadura oxidada   --- Novela del genero de autoayuda con elementos de ficción.
2) Vicente Leñero --- La gota de agua                       --- 1957 - Ingeniero civil de servicio social
3) Wayne W. Dyer  --- Construye tu destino                  --- Manifiesta tu yo íntimo y realiza tus aspiraciones
